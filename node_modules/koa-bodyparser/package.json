{
  "_args": [
    [
      {
        "raw": "koa-bodyparser",
        "scope": null,
        "escapedName": "koa-bodyparser",
        "name": "koa-bodyparser",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/peng/Work/Project/coCoding"
    ]
  ],
  "_cnpm_publish_time": 1490082562127,
  "_from": "koa-bodyparser",
  "_hasShrinkwrap": false,
  "_id": "koa-bodyparser@4.2.0",
  "_location": "/koa-bodyparser",
  "_nodeVersion": "7.6.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/koa-bodyparser-4.2.0.tgz_1490082560405_0.8950784963089973"
  },
  "_npmUser": {
    "name": "dead_horse",
    "email": "dead_horse@qq.com"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "koa-bodyparser",
    "scope": null,
    "escapedName": "koa-bodyparser",
    "name": "koa-bodyparser",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "http://registry.npm.taobao.org/koa-bodyparser/download/koa-bodyparser-4.2.0.tgz",
  "_shasum": "bce6e08bc65f8709b6d1faa9411c7f0d8938aa54",
  "_shrinkwrap": null,
  "_spec": "koa-bodyparser",
  "_where": "/home/peng/Work/Project/coCoding",
  "author": {
    "name": "dead_horse",
    "email": "dead_horse@qq.com",
    "url": "http://deadhorse.me"
  },
  "bugs": {
    "url": "https://github.com/koajs/body-parser/issues"
  },
  "dependencies": {
    "co-body": "^5.1.0",
    "copy-to": "^2.0.1"
  },
  "description": "a body parser for koa",
  "devDependencies": {
    "autod": "2.4.2",
    "istanbul": "^0.4.5",
    "koa": "^2.0.1",
    "mocha": "^3.2.0",
    "should": "^11.2.0",
    "supertest": "^3.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "bce6e08bc65f8709b6d1faa9411c7f0d8938aa54",
    "size": 4193,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/koa-bodyparser/download/koa-bodyparser-4.2.0.tgz"
  },
  "engines": {
    "node": ">=7.6"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "d836995468a15347022950c4da9d3222eb7ed2de",
  "homepage": "https://github.com/koajs/body-parser",
  "keywords": [
    "bodyParser",
    "json",
    "urlencoded",
    "koa",
    "body"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "dead_horse",
      "email": "dead_horse@qq.com"
    },
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com"
    }
  ],
  "name": "koa-bodyparser",
  "optionalDependencies": {},
  "publish_time": 1490082562127,
  "readme": "koa-bodyparser\n===============\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Coveralls][coveralls-image]][coveralls-url]\n[![David deps][david-image]][david-url]\n[![node version][node-image]][node-url]\n[![Gittip][gittip-image]][gittip-url]\n\n[npm-image]: https://img.shields.io/npm/v/koa-bodyparser.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/koa-bodyparser\n[travis-image]: https://img.shields.io/travis/koajs/bodyparser.svg?style=flat-square\n[travis-url]: https://travis-ci.org/koajs/bodyparser\n[coveralls-image]: https://img.shields.io/coveralls/koajs/bodyparser.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/koajs/bodyparser?branch=master\n[david-image]: https://img.shields.io/david/koajs/bodyparser.svg?style=flat-square\n[david-url]: https://david-dm.org/koajs/bodyparser\n[node-image]: https://img.shields.io/badge/node.js-%3E=_7.6-green.svg?style=flat-square\n[node-url]: http://nodejs.org/download/\n[gittip-image]: https://img.shields.io/gittip/dead-horse.svg?style=flat-square\n[gittip-url]: https://www.gittip.com/dead-horse/\n\n\nA body parser for koa, base on [co-body](https://github.com/tj/co-body). support `json`, `form` and `text` type body.\n\n## Install\n\n[![NPM](https://nodei.co/npm/koa-bodyparser.png?downloads=true)](https://nodei.co/npm/koa-bodyparser/)\n\n## Usage\n\n```js\nvar Koa = require('koa');\nvar bodyParser = require('koa-bodyparser');\n\nvar app = new Koa();\napp.use(bodyParser());\n\napp.use(async ctx => {\n  // the parsed body will store in ctx.request.body\n  // if nothing was parsed, body will be an empty object {}\n  ctx.body = ctx.request.body;\n});\n```\n\n## Options\n\n* **enableTypes**: parser will only parse when request type hits enableTypes, default is `['json', 'form']`.\n* **encode**: requested encoding. Default is `utf-8` by `co-body`.\n* **formLimit**: limit of the `urlencoded` body. If the body ends up being larger than this limit, a 413 error code is returned. Default is `56kb`.\n* **jsonLimit**: limit of the `json` body. Default is `1mb`.\n* **textLimit**: limit of the `text` body. Default is `1mb`.\n* **strict**: when set to true, JSON parser will only accept arrays and objects. Default is `true`. See [strict mode](https://github.com/cojs/co-body#options) in `co-body`. In strict mode, `ctx.request.body` will always be an object(or array), this avoid lots of type judging. But text body will always return string type.\n* **detectJSON**: custom json request detect function. Default is `null`.\n\n  ```js\n  app.use(bodyparser({\n    detectJSON: function (ctx) {\n      return /\\.json$/i.test(ctx.path);\n    }\n  }));\n  ```\n\n* **extendTypes**: support extend types:\n\n  ```js\n  app.use(bodyparser({\n    extendTypes: {\n      json: ['application/x-javascript'] // will parse application/x-javascript type body as a JSON string\n    }\n  }));\n  ```\n\n* **onerror**: support custom error handle, if `koa-bodyparser` throw an error, you can customize the response like:\n\n  ```js\n  app.use(bodyparser({\n    onerror: function (err, ctx) {\n      ctx.throw('body parse error', 422);\n    }\n  }));\n  ```\n\n* **disableBodyParser**: you can dynamic disable body parser by set `ctx.disableBodyParser = true`.\n\n```js\napp.use(async (ctx, next) => {\n  if (ctx.path === '/disable') ctx.disableBodyParser = true;\n  await next();\n});\napp.use(bodyparser());\n```\n\n## Raw Body\n\nYou can access raw request body by `ctx.request.rawBody` after `koa-bodyparser` when:\n\n1. `koa-bodyparser` parsed the request body.\n2. `ctx.request.rawBody` is not present before `koa-bodyparser`.\n\n## Koa 1 Support\n\nTo use `koa-bodyparser` with koa@1, please use [bodyparser 2.x](https://github.com/koajs/bodyparser/tree/2.x).\n\n```bash\nnpm install koa-bodyparser@2 --save\n```\n\n## Licences\n\n[MIT](LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/koajs/bodyparser.git"
  },
  "scripts": {
    "test": "make test"
  },
  "version": "4.2.0"
}
